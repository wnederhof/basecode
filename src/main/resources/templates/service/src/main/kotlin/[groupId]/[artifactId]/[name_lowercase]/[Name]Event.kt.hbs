package {{ groupId }}.{{ artifactId }}.{{ name_lowercase }}

import org.springframework.context.ApplicationEvent

sealed class {{ Name }}Event(source: Any) : ApplicationEvent(source) {

    data class Before{{ Name }}CreatedEvent(private val _source: Any, val entity: {{ Name }}) : {{ Name }}Event(_source)

    data class After{{ Name }}CreatedEvent(private val _source: Any, val entity: {{ Name }}) : {{ Name }}Event(_source)

    data class Before{{ Name }}UpdatedEvent(private val _source: Any, val original: {{ Name }}, val updated: {{ Name }}) : {{ Name }}Event(_source)

    data class After{{ Name }}UpdatedEvent(private val _source: Any, val original: {{ Name }}, val updated: {{ Name }}) : {{ Name }}Event(_source)

    data class Before{{ Name }}DeletedEvent(private val _source: Any, val id: Int) : {{ Name }}Event(_source)

    data class After{{ Name }}DeletedEvent(private val _source: Any, val id: Int) : {{ Name }}Event(_source)

}
