package {{ groupId }}.{{ artifactId }}.{{ nameLowerCase }}

import org.springframework.context.ApplicationEvent

sealed class {{ namePascalCase }}Event(source: Any) : ApplicationEvent(source) {

    data class Before{{ namePascalCase }}CreatedEvent(private val _source: Any, val entity: {{ namePascalCase }}) : {{ namePascalCase }}Event(_source)

    data class After{{ namePascalCase }}CreatedEvent(private val _source: Any, val entity: {{ namePascalCase }}) : {{ namePascalCase }}Event(_source)

    data class Before{{ namePascalCase }}UpdatedEvent(private val _source: Any, val original: {{ namePascalCase }}, val updated: {{ namePascalCase }}) : {{ namePascalCase }}Event(_source)

    data class After{{ namePascalCase }}UpdatedEvent(private val _source: Any, val original: {{ namePascalCase }}, val updated: {{ namePascalCase }}) : {{ namePascalCase }}Event(_source)

    data class Before{{ namePascalCase }}DeletedEvent(private val _source: Any, val id: Int) : {{ namePascalCase }}Event(_source)

    data class After{{ namePascalCase }}DeletedEvent(private val _source: Any, val id: Int) : {{ namePascalCase }}Event(_source)

}
