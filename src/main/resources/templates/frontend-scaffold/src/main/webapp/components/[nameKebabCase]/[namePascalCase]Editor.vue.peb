<template>
  <div>
    <{{namePascalCase}}Details :{{nameKebabCase}}-id="$props.{{nameCamelCase}}Id" />

    <NLink to="/{{namePluralKebabCase}}">
      List of {{namePluralPascalCase}}
    </NLink>
    <{%if usesBootstrapComponents%}BButton{%else%}button{%endif%} ref="edit{{namePascalCase}}Btn" @click="toggleEditor">
      Edit {{namePascalCase}}
    </{%if usesBootstrapComponents%}BButton{%else%}button{%endif%}>
{%if usesBootstrapComponents%}
    <BModal
      v-model="{{nameCamelCase}}EditorFormVisible"
      title="Edit {{ namePascalCase }}"
      hide-footer
    >
      <{{namePascalCase}}EditorForm
        v-if="{{nameCamelCase}}EditorFormVisible"
        :id="$props.{{nameCamelCase}}Id"{%for field in fields%}{%if field.isFieldRelational%}
        :{{ field.fieldNameKebabCase }}="$props.{{ field.fieldNameCamelCase }}"{%endif%}{%endfor%}
        ref="{{nameCamelCase}}EditorForm"
        @save:{{nameCamelCase}}="toggleEditor"
        @cancel:{{nameCamelCase}}EditorForm="toggleEditor"
      />
    </BModal>{%else%}
    <div v-if="{{nameCamelCase}}EditorFormVisible">
      <h2>Edit {{namePascalCase}}</h2>

      <{{namePascalCase}}EditorForm
        ref="{{nameCamelCase}}EditorForm"
        :id="$props.{{nameCamelCase}}Id"{%for field in fields%}{%if field.isFieldRelational%}
        :{{ field.fieldNameKebabCase }}="$props.{{ field.fieldNameCamelCase }}"{%endif%}{%endfor%}
        @save:{{nameCamelCase}}="toggleEditor"
        @cancel:{{nameCamelCase}}EditorForm="toggleEditor"
      />
    </div>{%endif%}
  </div>
</template>

<script lang="ts">
import Vue from 'vue'
import Component from 'nuxt-class-component'

@Component({
  props: {
    {{nameCamelCase}}Id: [Number, String]
  }
})
export default class extends Vue {
  {{nameCamelCase}}EditorFormVisible = false

  toggleEditor () {
    this.{{nameCamelCase}}EditorFormVisible = !this.{{nameCamelCase}}EditorFormVisible
  }
}
</script>
