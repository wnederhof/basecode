import { shallowMount, createLocalVue, Wrapper } from '@vue/test-utils'
import {{namePascalCase}}Details from '@/components/{{nameKebabCase}}/{{namePascalCase}}Details.vue'

const localVue = createLocalVue()

describe('{{namePascalCase}}Details', () => {
  let wrapper: Wrapper<any>

  const createComponent = () => {
    wrapper = shallowMount({{namePascalCase}}Details, {
      localVue,
      apolloProvider,
      propsData: { id: 1 },
      stubs: {
        VSectionLayout: true,
        VLoadingIndicator: true,
        VErrorMessage: true,
        VDataDetails: true,
        {{namePascalCase}}Editor: true
      },
      mocks: {
        $apollo: {
          queries: {
            loading: false,
          }
        }
      }
    })
  }

  afterEach(() => {
    wrapper.destroy()
  })

  it('is a Vue instance', () => {
    createComponent()
    expect(wrapper.vm).toBeTruthy()
  })

  it('should not show editor by default', () => {
    createComponent()
    expect(wrapper.vm.{{ nameCamelCase }}EditorVisible).toEqual(false)
    wrapper.vm.toggleEditor()
  })

  it('should show editor when toggleEditor is called', () => {
    createComponent()
    wrapper.vm.toggleEditor()
    expect(wrapper.vm.{{ nameCamelCase }}EditorVisible).toEqual(true)
  })

  it('should hide editor when toggleEditor is called twice', () => {
    createComponent()
    wrapper.vm.toggleEditor()
    wrapper.vm.toggleEditor()
    expect(wrapper.vm.{{ nameCamelCase }}EditorVisible).toEqual(false)
  })
})
