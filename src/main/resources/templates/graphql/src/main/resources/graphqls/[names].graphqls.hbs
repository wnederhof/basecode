extend type Query {
    {{ name }}(id: Int): {{ Name }}
    {{ names }}{{#if hasRelations}}(filter: {{ Name }}Filter){{/if}}: [{{ Name }}!]!
}

extend type Mutation {
    create{{ Name }}(input: Create{{ Name }}Input!): {{ Name }}!
    update{{ Name }}(id: ID!, input: Update{{ Name }}Input!): {{ Name }}
    delete{{ Name }}(id: ID!): Boolean!
}
{{#each fields }}{{#if isFieldRelational}}
extend type {{ fieldTypePascalCase }} {
    {{ names }}: [{{ Name }}!]!
}
{{/if}}{{/each}}
type {{ Name }} {
    id: ID!{{#each fields }}
    {{ fieldNameCamelCase }}: {{ graphQLFieldType }}{{/each}}{{#each fields }}{{#if isFieldRelational}}
    {{ fieldTypeCamelCase }}: {{ fieldTypePascalCase }}{{/if}}{{/each}}
    createdAt: Date!
    updatedAt: Date
}
{{#if hasRelations}}
input {{ Name }}Filter {
    id: ID{{#each fields }}{{#if isFieldRelational}}
    {{ fieldNameCamelCase }}: Int{{/if}}{{/each}}
}
{{/if}}
input Create{{ Name }}Input { {{#each fields }}
    {{ fieldNameCamelCase }}: {{ graphQLFieldType }}{{/each}}
}

input Update{{ Name }}Input { {{#each fields }}
    {{ fieldNameCamelCase }}: {{ nullableGraphQLFieldType }}{{/each}}{{#each fields }}{{#if isFieldNullable}}
    nullify{{ fieldNamePascalCase }}: Boolean{{/if}}{{/each}}
}
