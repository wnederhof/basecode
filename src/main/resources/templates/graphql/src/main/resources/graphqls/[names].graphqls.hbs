extend type Query {
    {{ name }}(id: Int): {{ Name }}
    {{ names }}{{#if hasRelations}}(filter: {{ Name }}Filter){{/if}}: [{{ Name }}!]!
}

extend type Mutation {
    create{{ Name }}(input: Create{{ Name }}Input!): {{ Name }}!
    update{{ Name }}(id: ID!, input: Update{{ Name }}Input!): {{ Name }}
    delete{{ Name }}(id: ID!): Boolean!
}
{{#each fields }}{{#if fieldRelationship}}
extend type {{ FieldType }} {
    {{ names }}: [{{ Name }}!]!
}
{{/if}}{{/each}}
type {{ Name }} {
    id: ID!{{#each fields }}
    {{ fieldName }}: {{ FieldGraphQLType }}{{/each}}{{#each fields }}{{#if fieldRelationship}}
    {{ fieldType }}: {{ FieldType }}{{/if}}{{/each}}
    createdAt: Date!
    updatedAt: Date
}
{{#if hasRelations}}
input {{ Name }}Filter {
    id: ID{{#each fields }}{{#if fieldRelationship}}
    {{ fieldName }}: Int{{/if}}{{/each}}
}
{{/if}}
input Create{{ Name }}Input { {{#each fields }}
    {{ fieldName }}: {{ FieldGraphQLType }}{{/each}}
}

input Update{{ Name }}Input {
    id: ID!{{#each fields }}
    {{ fieldName }}: {{ NullFieldGraphQLType }}{{#if isNullable}}
    nullify{{ FieldName }}: Boolean{{/if}}{{/each}}
}
