extend type Query {
    {{ nameCamelCase }}(id: Int): {{ namePascalCase }}
    {{ namePluralCamelCase }}{{#if hasRelations}}(filter: {{ namePascalCase }}Filter){{/if}}: [{{ namePascalCase }}!]!
}

extend type Mutation {
    create{{ namePascalCase }}(input: Create{{ namePascalCase }}Input!): {{ namePascalCase }}!
    update{{ namePascalCase }}(id: ID!, input: Update{{ namePascalCase }}Input!): {{ namePascalCase }}
    delete{{ namePascalCase }}(id: ID!): Boolean!
}
{{#each fields }}{{#if isFieldRelational}}
extend type {{ fieldTypePascalCase }} {
    {{ namePluralCamelCase }}: [{{ namePascalCase }}!]!
}
{{/if}}{{/each}}
type {{ namePascalCase }} {
    id: ID!{{#each fields }}
    {{ fieldNameCamelCase }}: {{ graphQLFieldType }}{{/each}}{{#each fields }}{{#if isFieldRelational}}
    {{ fieldTypeCamelCase }}: {{ fieldTypePascalCase }}{{/if}}{{/each}}
    createdAt: Date!
    updatedAt: Date
}
{{#if hasRelations}}
input {{ namePascalCase }}Filter {
    id: ID{{#each fields }}{{#if isFieldRelational}}
    {{ fieldNameCamelCase }}: Int{{/if}}{{/each}}
}
{{/if}}
input Create{{ namePascalCase }}Input { {{#each fields }}
    {{ fieldNameCamelCase }}: {{ graphQLFieldType }}{{/each}}
}

input Update{{ namePascalCase }}Input { {{#each fields }}
    {{ fieldNameCamelCase }}: {{ nullableGraphQLFieldType }}{{/each}}
}
