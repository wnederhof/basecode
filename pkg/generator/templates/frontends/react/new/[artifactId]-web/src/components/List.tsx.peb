import Link from 'next/link'
import React from 'react'

export interface AppListFieldProps<T> {
  render: (value: T) => React.ReactNode
  label: string
}

export interface AppListProps<T> {
  data?: T[]
  fields: (AppListFieldProps<T> | undefined)[]
  actions: (values: T) => AppListItemActionProps
}

export interface AppListItemActionProps {
  showHref?: string
  editHref?: string
  onDeleteClick?: () => void
}

export const List = <T,>({
  data,
  actions: actionsFn,
  fields,
  ...props
}: AppListProps<T>) => (
  <table {...props}>
    <thead>
      <tr>
        {fields.filter(field => field).map((field, i) => (
          <th key={i}>{field!.label}</th>
        ))}
      </tr>
    </thead>
    <tbody>
      {data?.map((values: T, i) => {
        const actions = actionsFn(values)
        return (
          <tr key={i}>
            {fields.filter(field => field).map((field, i) => (
              <td key={i}>{field!.render(values)}</td>
            ))}
            <td>
              {actions.showHref && <Link href={actions.showHref}>Show</Link>}
              {actions.editHref && <Link href={actions.editHref}>Edit</Link>}
              {actions.onDeleteClick && (
                <button onClick={actions.onDeleteClick}>Delete</button>
              )}
            </td>
          </tr>
        )
      })}
    </tbody>
  </table>
)
