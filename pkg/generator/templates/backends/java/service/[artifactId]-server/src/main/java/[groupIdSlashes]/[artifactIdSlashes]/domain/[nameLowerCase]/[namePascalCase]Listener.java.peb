{%if hasRelations%}package {{ groupId }}.{{ artifactId }}.domain.{{ nameLowerCase }};
{%for field in fields%}{%if field.isFieldRelational%}
import {{ groupId }}.{{ artifactId }}.domain.{{ field.fieldTypeLowerCase }}.{{ field.fieldTypePascalCase }};
import {{ groupId }}.{{ artifactId }}.domain.{{ field.fieldTypeLowerCase }}.{{ field.fieldTypePascalCase }}Event.{{ field.fieldTypePluralPascalCase }}DeletedEvent;{%endif%}{%endfor%}
import lombok.AllArgsConstructor;
import org.springframework.context.event.EventListener;
import org.springframework.stereotype.Component;

import java.util.stream.Collectors;

@Component
@AllArgsConstructor
class {{ namePascalCase }}Listener {
    private {{ namePascalCase }}Service {{ nameCamelCase }}Service;
{%for field in fields%}{%if field.isFieldRelational%}
    @EventListener
    void onEvent({{ field.fieldTypePluralPascalCase }}DeletedEvent event) {
        var entityIds = event.getEntities().stream()
                .map({{ field.fieldTypePascalCase }}::getId)
                .collect(Collectors.toList());
        {{ nameCamelCase }}Service.deleteBy{{ field.fieldNamePluralPascalCase }}(entityIds);
    }
{%endif%}{%endfor%}
}{%endif%}
