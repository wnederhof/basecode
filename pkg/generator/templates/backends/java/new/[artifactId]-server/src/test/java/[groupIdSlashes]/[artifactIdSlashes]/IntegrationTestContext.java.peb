package {{ groupId }}.{{ artifactId }};

import org.springframework.boot.test.context.SpringBootTest;
import org.springframework.test.context.DynamicPropertyRegistry;
import org.springframework.test.context.DynamicPropertySource;
import org.springframework.transaction.annotation.Transactional;
import org.testcontainers.containers.PostgreSQLContainer;
import org.testcontainers.junit.jupiter.Testcontainers;

@SpringBootTest
@Testcontainers
@Transactional // Rolls back transaction after each test.
public abstract class IntegrationTestContext {
    private static final PostgreSQLContainer<?> POSTGRES_CONTAINER = new PostgreSQLContainer("postgres:14-alpine")
            .withDatabaseName("foo")
            .withUsername("foo")
            .withPassword("secret");

    static {
        POSTGRES_CONTAINER.start();
    }

    @DynamicPropertySource
    static void databaseProperties(DynamicPropertyRegistry registry) {
        registry.add("spring.datasource.url", POSTGRES_CONTAINER::getJdbcUrl);
        registry.add("spring.datasource.username", POSTGRES_CONTAINER::getUsername);
        registry.add("spring.datasource.password", POSTGRES_CONTAINER::getPassword);
    }
}
