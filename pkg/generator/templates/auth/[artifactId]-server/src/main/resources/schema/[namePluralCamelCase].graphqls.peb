extend type Query {
    currentUser: User
    user(id: ID!): User
    users{%if hasRelations%}(filter: UserFilter){%endif%}: [User!]!
}

extend type Mutation {
    login(input: LoginInput!): User!
    logout: Boolean!
    register(input: RegisterInput!): User!
    updateUser(id: ID!, input: UpdateUserInput!): User
    deleteUser(id: ID!): Boolean!
}

type User {
    id: ID!{%for field in fields%}{%if field.fieldNameCamelCase != "password" %}
    {{ field.fieldNameCamelCase }}: {{ field.graphQLFieldType }}{%endif%}{%endfor%}{%for field in fields%}{%if field.isFieldRelational%}
    {{ field.fieldTypeCamelCase }}: {{ field.fieldTypePascalCase }}{%endif%}{%endfor%}
    createdAt: Date!
    updatedAt: Date
}

input LoginInput {
    username: String!
    password: String!
}

input RegisterInput { {%for field in fields%}
    {{ field.fieldNameCamelCase }}: {{ field.graphQLFieldType }}{%endfor%}
}

input UpdateUserInput { {%for field in fields%}{%if field.fieldNameCamelCase != "username"%}
    {{ field.fieldNameCamelCase }}: {{ field.graphQLFieldType }}{%endif%}{%endfor%}
}
