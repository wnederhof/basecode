package {{ groupId }}.{{ artifactId }}.application.security

import org.springframework.security.core.context.SecurityContextHolder
import org.springframework.security.authentication.AuthenticationProvider
import org.springframework.security.authentication.UsernamePasswordAuthenticationToken
import org.springframework.security.core.AuthenticationException;
import org.springframework.security.crypto.password.PasswordEncoder
import org.springframework.stereotype.Service
import org.springframework.transaction.annotation.Transactional

@Service
@Transactional
class UserAuthenticationService(
    private val applicationUserDetailsService: ApplicationUserDetailsService,
    private val authenticationProvider: AuthenticationProvider
) {

    val currentUser: UserDetails? get() {
        val context = SecurityContextHolder.getContext()
        val name = context.authentication?.name ?: return null
        return applicationUserDetailsService.loadUserByUsername(name)
    }

    fun login(name: String, password: String) {
        return try {
            val credentials = UsernamePasswordAuthenticationToken(email, password)
            SecurityContextHolder.getContext().authentication = authenticationProvider.authenticate(credentials)
            currentUser
        } catch (e: AuthenticationException) {
            null
        }
    }

    fun logout() {
        SecurityContextHolder.getContext().authentication = null
    }

}