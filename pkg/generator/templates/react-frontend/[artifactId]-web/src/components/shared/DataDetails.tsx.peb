import { LoadingIndicator } from '@components/shared/LoadingIndicator'
import { ErrorMessage } from '@components/shared/ErrorMessage'

export interface DataDetailsField {
  key: string
  label: string
  value?: (data: any) => string
}

export interface DataDetailsProps {
  fields: DataDetailsField[]
  errorMessage?: string
  fetching?: boolean
  value: any
}

function extractValue(field: DataDetailsField, value: any) {
  return value && (field.value ? field.value(value) : value[field.key])
}

export function DataDetails(props: DataDetailsProps) {
  if (props.fetching) {
    return <LoadingIndicator />
  }
  if (props.errorMessage) {
    return <ErrorMessage message={props.errorMessage} />
  }
  if (!props.value) {
    return <div>No record found.</div>
  }
  return (
    <table>
      <tbody>
        {props.fields.map((field) => (
          <tr key={field.key}>
            <td>{field.label}</td>
            <td>{extractValue(field, props.value)}</td>
          </tr>
        ))}
      </tbody>
    </table>
  )
}
