import React from 'react'

export interface AppListFieldProps {
  name: string
  label: string
}

export interface AppListProps<T> {
  data?: T[]
  fields: AppListFieldProps[]
  actions: (values: T) => AppListItemActionProps
}

export interface AppListItemActionProps {
  show?: string
  edit?: string
  delete?: () => void
}

export const List = <T,>({
  data,
  actions: actionsFn,
  fields,
  ...props
}: AppListProps<T>) => (
  <table {...props}>
    <thead>
      <tr>
        {fields.map(field => (
          <th key={field.name}>{field.label}</th>
        ))}
      </tr>
    </thead>
    <tbody>
      {data?.map((values: T, i) => {
        const actions = actionsFn(values)
        return (
          <tr key={i}>
            {fields.map((field) => (
              <td key={field.name}>{'' + values[field.name as keyof T]}</td>
            ))}
            <td>
              {actions.showHref && <a href={actions.showHref}>Show</a>}
              {actions.editHref && <a href={actions.editHref}>Edit</a>}
              {actions.onDeleteClick && <button onClick={actions.onDeleteClick}>Delete</button>}
            </td>
          </tr>
        )
      })}
    </tbody>
  </table>
)
