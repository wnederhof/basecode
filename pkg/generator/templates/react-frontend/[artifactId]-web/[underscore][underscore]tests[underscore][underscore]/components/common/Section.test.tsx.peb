import { fireEvent, render, screen } from '@testing-library/react'
import { Section } from '../../../src/components/common/Section'

describe('Section', () => {
  it('renders the header', () => {
    render(
      <Section header="Header">
        <div />
      </Section>
    )
    expect(screen.getByText('Header').nodeName).toBe('H1')
  })

  it('renders children', () => {
    render(
      <Section header="Header">
        <p>Child</p>
      </Section>
    )
    expect(screen.getByText('Child').nodeName).toBe('P')
  })

  it('renders nested headers at least three levels deep', () => {
    render(
      <Section header="Header 1">
        <Section header="Header 2">
          <Section header="Header 3">
            <div />
          </Section>
        </Section>
      </Section>
    )
    expect(screen.getByText('Header 1').nodeName).toBe('H1')
    expect(screen.getByText('Header 2').nodeName).toBe('H2')
    expect(screen.getByText('Header 3').nodeName).toBe('H3')
  })

  it('does not render Back, New, Edit when they are not set', () => {
    render(
      <Section header="Header">
        <div />
      </Section>
    )
    expect(screen.queryByText('Back')).toBeNull()
    expect(screen.queryByText('New')).toBeNull()
    expect(screen.queryByText('Edit')).toBeNull()
  })

  it('shows a Back button which is clickable when onBack is set', () => {
    const backFn = jest.fn()
    render(
      <Section
        header="Header"
        actionBar={
          <SectionBar.CommonActions
            showBack
            onBack={backFn}
          />
        }
      >
        <div />
      </Section>
    )
    expect(screen.queryByText('Back')).not.toBeNull()
    fireEvent(
      screen.getByText('Back'),
      new MouseEvent('click', {
        bubbles: true,
        cancelable: true,
      })
    )
    expect(backFn).toBeCalled()
  })

  it('shows a New button which is clickable when onBack is set', () => {
    const newFn = jest.fn()
    render(
      <Section
        header="Header"
        actionBar={
          <SectionBar.CommonActions
            showNew
            onNew={newFn}
          />
        }
      >
        <div />
      </Section>
    )
    expect(screen.queryByText('New')).not.toBeNull()
    fireEvent(
      screen.getByText('New'),
      new MouseEvent('click', {
        bubbles: true,
        cancelable: true,
      })
    )
    expect(newFn).toBeCalled()
  })

  it('shows an Edit button which is clickable when onBack is set', () => {
    const editFn = jest.fn()
    render(
      <Section header="Header"
        actionBar={
          <SectionBar.CommonActions
            showEdit
            onEdit={editFn}
          />
        }
      >
        <div />
      </Section>
    )
    expect(screen.queryByText('Edit')).not.toBeNull()
    fireEvent(
      screen.getByText('Edit'),
      new MouseEvent('click', {
        bubbles: true,
        cancelable: true,
      })
    )
    expect(editFn).toBeCalled()
  })
})
