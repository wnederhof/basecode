import { render, screen } from '@testing-library/react'
import { {{ namePascalCase }}Details } from '../../../src/components/app/{{ nameKebabCase }}/{{ namePascalCase }}Details'
import { Client, Provider } from 'urql'
import { fromValue } from 'wonka'

describe('{{ namePascalCase }}Details', () => {
  const {{ nameCamelCase }} = {
    id: '1'{%for field in fields%},
    {{field.fieldNameCamelCase}}: {{field.fieldFrontendTestValue}}{%endfor%}
  }

  it('renders details when data is fetched', () => {
    const executeQuery = jest.fn()
    executeQuery.mockReturnValue(
      fromValue({
        data: { {{ nameCamelCase }} },
      })
    )
    const mockClient: Partial<Client> = {
      executeQuery,
      executeMutation: jest.fn(),
      executeSubscription: jest.fn(),
    }
    render(
      <Provider value={mockClient as Client}>
        <{{ namePascalCase }}Details id="1" />
      </Provider>
    ){%for field in fields%}
    expect(screen.getAllByText('' + {{ nameCamelCase }}.{{ field.fieldNameCamelCase }}).length).not.toBe(0){%endfor%}
  })
})
