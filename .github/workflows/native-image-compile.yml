name: native-image-compile
on: [push]
jobs:
  native-image-compile-in-docker:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
#        os: [ubuntu-latest]
        os: [ubuntu-latest, macos-latest]
        gu-binary: [gu, gu.cmd]
        exclude:
          - os: ubuntu-latest
            gu-binary: gu.cmd
          - os: macos-latest
            gu-binary: gu.cmd
          - os: windows-latest
            gu-binary: gu
    steps:
      - run: echo ${{matrix.TARGET}}
      - uses: actions/checkout@v2
      - uses: DeLaGuardo/setup-graalvm@4.0
        with:
          # GraalVM version, no pattern syntax available atm
          graalvm: '21.0.0.2'
          # Java version, optional, defaults to 'java8'. Available options are 'java8' and 'java11'.
          java: 'java11'
          # Architecture flag, optional, defaults to 'amd64'. Available options are 'amd64' and 'aarch64'. Later is available only for linux runners.
          arch: 'amd64'
      - name: Install native-image component
        run: |
          ${{ matrix.gu-binary }} install native-image
      - run: ./mvnw -Pnative package -DskipTests
      - run: ls target
      - name: Tag and prepare release
        id: tag_and_prepare_release
        uses: K-Phoen/semver-release-action@master
        with:
          release_branch: master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create release
        uses: Roang-zero1/github-create-release-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Create GitHub release
        uses: Roang-zero1/github-upload-release-artifacts-action@master
        with:
          args: target/crudcodegen
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
